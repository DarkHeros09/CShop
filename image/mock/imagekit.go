// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cshop/v3/image (interfaces: ImageKitManagement)
//
// Generated by this command:
//
//	mockgen --build_flags=--mod=mod -package mockik -destination image/mock/imagekit.go github.com/cshop/v3/image ImageKitManagement
//

// Package mockik is a generated GoMock package.
package mockik

import (
	context "context"
	reflect "reflect"

	media "github.com/imagekit-developer/imagekit-go/api/media"
	url "github.com/imagekit-developer/imagekit-go/url"
	gomock "go.uber.org/mock/gomock"
)

// MockImageKitManagement is a mock of ImageKitManagement interface.
type MockImageKitManagement struct {
	ctrl     *gomock.Controller
	recorder *MockImageKitManagementMockRecorder
}

// MockImageKitManagementMockRecorder is the mock recorder for MockImageKitManagement.
type MockImageKitManagementMockRecorder struct {
	mock *MockImageKitManagement
}

// NewMockImageKitManagement creates a new mock instance.
func NewMockImageKitManagement(ctrl *gomock.Controller) *MockImageKitManagement {
	mock := &MockImageKitManagement{ctrl: ctrl}
	mock.recorder = &MockImageKitManagementMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImageKitManagement) EXPECT() *MockImageKitManagementMockRecorder {
	return m.recorder
}

// ListAndSearch mocks base method.
func (m *MockImageKitManagement) ListAndSearch(arg0 context.Context, arg1 media.FilesParam) (*media.FilesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAndSearch", arg0, arg1)
	ret0, _ := ret[0].(*media.FilesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAndSearch indicates an expected call of ListAndSearch.
func (mr *MockImageKitManagementMockRecorder) ListAndSearch(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAndSearch", reflect.TypeOf((*MockImageKitManagement)(nil).ListAndSearch), arg0, arg1)
}

// UrlGeneration mocks base method.
func (m *MockImageKitManagement) UrlGeneration(arg0 context.Context, arg1 url.UrlParam) (*string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UrlGeneration", arg0, arg1)
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UrlGeneration indicates an expected call of UrlGeneration.
func (mr *MockImageKitManagementMockRecorder) UrlGeneration(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UrlGeneration", reflect.TypeOf((*MockImageKitManagement)(nil).UrlGeneration), arg0, arg1)
}
